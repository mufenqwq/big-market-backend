24-10-27.00:00:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:00:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:01:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:02:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:03:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:04:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:05:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:06:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:07:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:08:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:09:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:10:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:11:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:12:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:13:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:14:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:15:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:16:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:10.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:17:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:18:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:19:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.00:20:38.537 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-27.00:20:38.551 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-27.14:57:38.525 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 42120 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-27.14:57:38.529 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-27.14:57:39.638 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-27.14:57:39.641 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-27.14:57:39.673 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 16 ms. Found 0 Redis repository interfaces.
24-10-27.14:57:40.225 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-10-27.14:57:40.233 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-10-27.14:57:40.234 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-27.14:57:40.234 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-27.14:57:40.342 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-27.14:57:40.342 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1766 ms
24-10-27.14:57:40.881 [main            ] INFO  Version                - Redisson 3.23.4
24-10-27.14:57:41.033 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.14:57:41.045 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.14:57:41.738 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-27.14:57:41.766 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-10-27.14:57:41.776 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-10-27.14:57:41.793 [main            ] INFO  Application            - Started Application in 3.858 seconds (JVM running for 4.665)
24-10-27.14:57:42.228 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-27.14:57:42.229 [RMI TCP Connection(2)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-27.14:57:42.229 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-27.14:57:42.233 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 4 ms
24-10-27.14:57:42.338 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-27.14:57:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:57:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:57:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:58:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:00.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:30.009 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:36.231 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-27.14:59:36.775 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-27.14:59:42.219 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 43548 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-27.14:59:42.220 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-27.14:59:42.902 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-27.14:59:42.904 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-27.14:59:42.925 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-10-27.14:59:43.315 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-10-27.14:59:43.322 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-10-27.14:59:43.322 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-27.14:59:43.323 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-27.14:59:43.388 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-27.14:59:43.388 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1135 ms
24-10-27.14:59:43.875 [main            ] INFO  Version                - Redisson 3.23.4
24-10-27.14:59:44.003 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.14:59:44.013 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.14:59:44.704 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-27.14:59:44.732 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-10-27.14:59:44.740 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-10-27.14:59:44.755 [main            ] INFO  Application            - Started Application in 2.935 seconds (JVM running for 3.42)
24-10-27.14:59:44.864 [RMI TCP Connection(2)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-27.14:59:44.864 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-27.14:59:44.865 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-27.14:59:44.865 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-10-27.14:59:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:45.028 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-27.14:59:49.237 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.14:59:49.602 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.14:59:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.14:59:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:07.165 [http-nio-8091-exec-4] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:00:07.183 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:00:07.183 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:00:07.346 [http-nio-8091-exec-4] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102
24-10-27.15:00:07.346 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-10-27.15:00:07.347 [http-nio-8091-exec-4] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-10-27.15:00:07.380 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0001
24-10-27.15:00:07.380 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-10-27.15:00:07.380 [http-nio-8091-exec-4] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-10-27.15:00:07.380 [http-nio-8091-exec-4] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_luck_award code:0001
24-10-27.15:00:07.380 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-10-27.15:00:07.401 [http-nio-8091-exec-4] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"成功"}
24-10-27.15:00:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:14.205 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100006
24-10-27.15:00:14.216 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100006 response: {"code":"0000","data":true,"info":"成功"}
24-10-27.15:00:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:15.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 strategyId:100006 awardId:102
24-10-27.15:00:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:27.668 [http-nio-8091-exec-7] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:00:27.674 [http-nio-8091-exec-7] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:00:27.674 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:00:27.679 [http-nio-8091-exec-7] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:102
24-10-27.15:00:27.679 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_lock code:0000
24-10-27.15:00:27.679 [http-nio-8091-exec-7] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-10-27.15:00:27.682 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_stock code:0001
24-10-27.15:00:27.682 [http-nio-8091-exec-7] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:102 ruleValue:101:1,100
24-10-27.15:00:27.683 [http-nio-8091-exec-7] INFO  RuleLuckAwardLogicTreeNode - 规则过滤-兜底奖品 userId:system strategyId:100006 awardId:101 awardRuleValue:1,100
24-10-27.15:00:27.683 [http-nio-8091-exec-7] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock node:rule_luck_award code:0001
24-10-27.15:00:27.683 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 1,100
24-10-27.15:00:27.684 [http-nio-8091-exec-7] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"成功"}
24-10-27.15:00:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:35.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 strategyId:100006 awardId:102
24-10-27.15:00:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:00:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:01:59.508 [http-nio-8091-exec-10] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100005
24-10-27.15:01:59.513 [http-nio-8091-exec-10] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100005 response: {"code":"0000","data":[],"info":"成功"}
24-10-27.15:02:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:04.751 [http-nio-8091-exec-2] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:02:04.763 [http-nio-8091-exec-2] ERROR RaffleController       - 随机抽奖失败 strategyId：100005
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryStrategyEntityByStrategyId(StrategyRepository.java:116)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d581abbc.queryStrategyEntityByStrategyId(<generated>)
	at site.mufen.domain.strategy.service.rule.chain.factory.DefaultChainFactory.openLogicChain(DefaultChainFactory.java:33)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:52)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:55)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-27.15:02:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:07.386 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100005
24-10-27.15:02:07.391 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100005 response: {"code":"0000","data":false,"info":"成功"}
24-10-27.15:02:09.019 [http-nio-8091-exec-5] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:02:09.022 [http-nio-8091-exec-5] ERROR RaffleController       - 随机抽奖失败 strategyId：100005
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryStrategyEntityByStrategyId(StrategyRepository.java:116)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d581abbc.queryStrategyEntityByStrategyId(<generated>)
	at site.mufen.domain.strategy.service.rule.chain.factory.DefaultChainFactory.openLogicChain(DefaultChainFactory.java:33)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:52)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:55)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-27.15:02:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:19.669 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100005
24-10-27.15:02:19.674 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100005 response: {"code":"0000","data":false,"info":"成功"}
24-10-27.15:02:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:25.134 [http-nio-8091-exec-7] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:02:25.138 [http-nio-8091-exec-7] ERROR RaffleController       - 随机抽奖失败 strategyId：100005
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryStrategyEntityByStrategyId(StrategyRepository.java:116)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d581abbc.queryStrategyEntityByStrategyId(<generated>)
	at site.mufen.domain.strategy.service.rule.chain.factory.DefaultChainFactory.openLogicChain(DefaultChainFactory.java:33)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicChain(DefaultRaffleStrategy.java:52)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:55)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-27.15:02:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:02:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:03:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:04:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:05:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:06:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:06:03.668 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-27.15:06:03.677 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-27.15:08:08.786 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 46312 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-27.15:08:08.789 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-27.15:08:09.811 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-27.15:08:09.813 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-27.15:08:09.843 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 14 ms. Found 0 Redis repository interfaces.
24-10-27.15:08:10.587 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-10-27.15:08:10.599 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-10-27.15:08:10.600 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-27.15:08:10.600 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-27.15:08:10.700 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-27.15:08:10.700 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1868 ms
24-10-27.15:08:11.580 [main            ] INFO  Version                - Redisson 3.23.4
24-10-27.15:08:11.804 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.15:08:11.816 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.15:08:12.925 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-27.15:08:12.966 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-10-27.15:08:12.979 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-10-27.15:08:13.003 [main            ] INFO  Application            - Started Application in 4.797 seconds (JVM running for 5.548)
24-10-27.15:08:13.067 [RMI TCP Connection(1)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-27.15:08:13.068 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-27.15:08:13.068 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-27.15:08:13.069 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 1 ms
24-10-27.15:08:13.220 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-27.15:08:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:26.347 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100005
24-10-27.15:08:26.776 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100005 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1},{"awardId":103,"awardTitle":"随机积分","sort":1},{"awardId":104,"awardTitle":"随机积分","sort":1},{"awardId":105,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:08:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:31.115 [http-nio-8091-exec-2] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:08:31.133 [http-nio-8091-exec-2] ERROR RaffleController       - 随机抽奖失败 strategyId：100005 big_market_strategy_rate_range_key_100005:抽奖策略配置未装配， 请通过IStrategyArmory完成装配
24-10-27.15:08:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:36.549 [http-nio-8091-exec-3] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100005
24-10-27.15:08:36.589 [http-nio-8091-exec-3] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100005 response: {"code":"0000","data":true,"info":"成功"}
24-10-27.15:08:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:42.516 [http-nio-8091-exec-4] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:08:42.521 [http-nio-8091-exec-4] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100005 ruleModel: rule_default awardId: null
24-10-27.15:08:42.522 [http-nio-8091-exec-4] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100005 null rule_default
24-10-27.15:08:42.589 [http-nio-8091-exec-4] ERROR RaffleController       - 随机抽奖失败 strategyId：100005
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
### The error may exist in file [/home/mufen/Downloads/big-market/big-market-app/target/classes/mybatis/mapper/rule_tree_mapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select tree_id, tree_name, tree_desc, tree_root_rule_key         from rule_tree where tree_id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy94.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy98.queryRuleTreeByTreeId(Unknown Source)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:179)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$2e49122c.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 74 common frames omitted
24-10-27.15:08:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:08:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:39.733 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:09:39.736 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:09:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:40.759 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100006
24-10-27.15:09:40.770 [http-nio-8091-exec-6] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100006 response: {"code":"0000","data":true,"info":"成功"}
24-10-27.15:09:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:46.797 [http-nio-8091-exec-7] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:09:46.802 [http-nio-8091-exec-7] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:09:46.802 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:09:46.809 [http-nio-8091-exec-7] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
### The error may exist in file [/home/mufen/Downloads/big-market/big-market-app/target/classes/mybatis/mapper/rule_tree_mapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select tree_id, tree_name, tree_desc, tree_root_rule_key         from rule_tree where tree_id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy94.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy98.queryRuleTreeByTreeId(Unknown Source)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:179)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$2e49122c.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 74 common frames omitted
24-10-27.15:09:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:09:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:10:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:11:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:11.291 [http-nio-8091-exec-9] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:12:11.293 [http-nio-8091-exec-9] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:12:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:12:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:13:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:14:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:15:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:16:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:17:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:18:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:36.501 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:19:36.503 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:19:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:19:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:05.814 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:20:05.816 [http-nio-8091-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:20:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:20:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:21:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:22:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:23:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:24:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:25:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:26:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:27:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:28:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:29:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:30:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:31:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:32:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:33:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:34:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:35:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:36:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:37:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:38:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:38.915 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:39:38.924 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:39:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:43.042 [http-nio-8091-exec-7] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:39:43.048 [http-nio-8091-exec-7] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:39:43.048 [http-nio-8091-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:39:43.079 [http-nio-8091-exec-7] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
### The error may exist in file [/home/mufen/Downloads/big-market/big-market-app/target/classes/mybatis/mapper/rule_tree_mapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select tree_id, tree_name, tree_desc, tree_root_rule_key         from rule_tree where tree_id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy94.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy98.queryRuleTreeByTreeId(Unknown Source)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:179)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$2e49122c.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 74 common frames omitted
24-10-27.15:39:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:39:56.476 [http-nio-8091-exec-8] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:39:56.479 [http-nio-8091-exec-8] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:39:56.479 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:39:56.484 [http-nio-8091-exec-8] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
### The error may exist in file [/home/mufen/Downloads/big-market/big-market-app/target/classes/mybatis/mapper/rule_tree_mapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select tree_id, tree_name, tree_desc, tree_root_rule_key         from rule_tree where tree_id = ?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:239)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:70)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:91)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:441)
	at com.sun.proxy.$Proxy94.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:160)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:87)
	at org.apache.ibatis.binding.MapperProxy$PlainMethodInvoker.invoke(MapperProxy.java:152)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:85)
	at com.sun.proxy.$Proxy98.queryRuleTreeByTreeId(Unknown Source)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:179)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$2e49122c.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'tree_root_rule_key' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:89)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:140)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:427)
	... 74 common frames omitted
24-10-27.15:40:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:40:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:41:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:41:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:41:08.352 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-27.15:41:08.358 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-27.15:43:04.987 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 55606 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-27.15:43:04.990 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-27.15:43:06.162 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-27.15:43:06.165 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-27.15:43:06.206 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 19 ms. Found 0 Redis repository interfaces.
24-10-27.15:43:06.934 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-10-27.15:43:06.946 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-10-27.15:43:06.947 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-27.15:43:06.947 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-27.15:43:07.050 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-27.15:43:07.050 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2007 ms
24-10-27.15:43:07.899 [main            ] INFO  Version                - Redisson 3.23.4
24-10-27.15:43:08.105 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.15:43:08.119 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-27.15:43:09.065 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-27.15:43:09.095 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-10-27.15:43:09.108 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8091 (http) with context path ''
24-10-27.15:43:09.127 [main            ] INFO  Application            - Started Application in 4.689 seconds (JVM running for 5.584)
24-10-27.15:43:09.486 [RMI TCP Connection(2)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-27.15:43:09.486 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-27.15:43:09.486 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-27.15:43:09.489 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 3 ms
24-10-27.15:43:09.599 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-27.15:43:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:13.437 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:43:13.797 [http-nio-8091-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:43:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:30.393 [http-nio-8091-exec-2] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:43:30.407 [http-nio-8091-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 102
24-10-27.15:43:30.407 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 102 rule_default
24-10-27.15:43:30.583 [http-nio-8091-exec-2] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:102
24-10-27.15:43:30.607 [http-nio-8091-exec-2] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-10-27.15:43:30.607 [http-nio-8091-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 102 null
24-10-27.15:43:30.622 [http-nio-8091-exec-2] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":102,"awardIndex":2},"info":"成功"}
24-10-27.15:43:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:35.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 strategyId:100006 awardId:102
24-10-27.15:43:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:43:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:15.335 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100006
24-10-27.15:44:15.364 [http-nio-8091-exec-4] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100006 response: {"code":"0000","data":true,"info":"成功"}
24-10-27.15:44:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:20.549 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:44:20.552 [http-nio-8091-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"7等奖","sort":2},{"awardId":103,"awardTitle":"6等奖","sort":3},{"awardId":104,"awardTitle":"5等奖","sort":4},{"awardId":105,"awardTitle":"4等奖","sort":5},{"awardId":106,"awardSubtitle":"抽奖1次后解锁","awardTitle":"3等奖","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"2等奖","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"1等奖","sort":8}],"info":"成功"}
24-10-27.15:44:24.583 [http-nio-8091-exec-6] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-27.15:44:24.588 [http-nio-8091-exec-6] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 104
24-10-27.15:44:24.588 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 104 rule_default
24-10-27.15:44:24.598 [http-nio-8091-exec-6] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:104
24-10-27.15:44:24.600 [http-nio-8091-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-10-27.15:44:24.601 [http-nio-8091-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 104 null
24-10-27.15:44:24.604 [http-nio-8091-exec-6] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":104,"awardIndex":4},"info":"成功"}
24-10-27.15:44:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:30.003 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 strategyId:100006 awardId:104
24-10-27.15:44:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:44:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:26.973 [http-nio-8091-exec-9] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors<EOL>Field error in object 'raffleAwardListRequestDTO' on field 'strategyId': rejected value [NaN]; codes [typeMismatch.raffleAwardListRequestDTO.strategyId,typeMismatch.strategyId,typeMismatch.java.lang.Long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [raffleAwardListRequestDTO.strategyId,strategyId]; arguments []; default message [strategyId]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Long' for property 'strategyId'; nested exception is java.lang.NumberFormatException: For input string: "NaN"]]
24-10-27.15:45:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:33.269 [http-nio-8091-exec-10] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors<EOL>Field error in object 'raffleAwardListRequestDTO' on field 'strategyId': rejected value [NaN]; codes [typeMismatch.raffleAwardListRequestDTO.strategyId,typeMismatch.strategyId,typeMismatch.java.lang.Long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [raffleAwardListRequestDTO.strategyId,strategyId]; arguments []; default message [strategyId]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Long' for property 'strategyId'; nested exception is java.lang.NumberFormatException: For input string: "NaN"]]
24-10-27.15:45:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:42.707 [http-nio-8091-exec-1] WARN  DefaultHandlerExceptionResolver - Resolved [org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors<EOL>Field error in object 'raffleAwardListRequestDTO' on field 'strategyId': rejected value [NaN]; codes [typeMismatch.raffleAwardListRequestDTO.strategyId,typeMismatch.strategyId,typeMismatch.java.lang.Long,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [raffleAwardListRequestDTO.strategyId,strategyId]; arguments []; default message [strategyId]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Long' for property 'strategyId'; nested exception is java.lang.NumberFormatException: For input string: "NaN"]]
24-10-27.15:45:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:45.675 [http-nio-8091-exec-3] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100005
24-10-27.15:45:45.681 [http-nio-8091-exec-3] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100005 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"随机积分","sort":1},{"awardId":103,"awardTitle":"随机积分","sort":1},{"awardId":104,"awardTitle":"随机积分","sort":1},{"awardId":105,"awardTitle":"随机积分","sort":1}],"info":"成功"}
24-10-27.15:45:46.574 [http-nio-8091-exec-5] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100005
24-10-27.15:45:46.585 [http-nio-8091-exec-5] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100005 response: {"code":"0000","data":true,"info":"成功"}
24-10-27.15:45:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:45:51.132 [http-nio-8091-exec-8] INFO  RaffleController       - 随机抽奖开始 strategyId: 100005
24-10-27.15:45:51.136 [http-nio-8091-exec-8] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100005 ruleModel: rule_default awardId: null
24-10-27.15:45:51.136 [http-nio-8091-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100005 null rule_default
24-10-27.15:45:51.146 [http-nio-8091-exec-8] ERROR RaffleController       - 随机抽奖失败 strategyId：100005
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:214)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$e9bd8228.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleStrategyController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-27.15:45:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:02.853 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-27.15:46:02.857 [http-nio-8091-exec-7] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"7等奖","sort":2},{"awardId":103,"awardTitle":"6等奖","sort":3},{"awardId":104,"awardTitle":"5等奖","sort":4},{"awardId":105,"awardTitle":"4等奖","sort":5},{"awardId":106,"awardSubtitle":"抽奖1次后解锁","awardTitle":"3等奖","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"2等奖","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"1等奖","sort":8}],"info":"成功"}
24-10-27.15:46:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:50.004 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:46:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:47:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:48:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:49:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:50:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:51:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:52:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:53:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:54:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-27.15:55:30.418 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-27.15:55:30.426 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.

24-10-28.19:01:22.401 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 102038 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:01:22.403 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:01:23.098 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:01:23.100 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:01:23.121 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
24-10-28.19:01:23.540 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8091 (http)
24-10-28.19:01:23.547 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8091"]
24-10-28.19:01:23.547 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:01:23.547 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:01:23.620 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:01:23.620 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1186 ms
24-10-28.19:01:24.131 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:01:24.266 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:01:24.278 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:01:25.090 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:01:25.117 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8091"]
24-10-28.19:01:25.125 [main            ] WARN  AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat server
24-10-28.19:01:25.154 [main            ] INFO  Http11NioProtocol      - Pausing ProtocolHandler ["http-nio-8091"]
24-10-28.19:01:25.154 [main            ] INFO  StandardService        - Stopping service [Tomcat]
24-10-28.19:01:25.157 [main            ] INFO  Http11NioProtocol      - Stopping ProtocolHandler ["http-nio-8091"]
24-10-28.19:01:25.158 [main            ] INFO  Http11NioProtocol      - Destroying ProtocolHandler ["http-nio-8091"]
24-10-28.19:01:25.170 [main            ] INFO  ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
24-10-28.19:01:25.185 [main            ] ERROR SpringApplication      - Application run failed
org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat server
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:181)
	at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:937)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:586)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:147)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:731)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:408)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:307)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1303)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1292)
	at site.mufen.Application.main(Application.java:14)
Caused by: org.springframework.boot.web.server.WebServerException: Unable to start embedded Tomcat server
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:229)
	at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)
	... 14 common frames omitted
Caused by: java.lang.IllegalArgumentException: standardService.connector.startFailed
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:235)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:282)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:213)
	... 16 common frames omitted
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1039)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:183)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:232)
	... 18 common frames omitted
Caused by: java.net.BindException: 地址已在使用
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:461)
	at sun.nio.ch.Net.bind(Net.java:453)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:222)
	at org.apache.tomcat.util.net.NioEndpoint.initServerSocket(NioEndpoint.java:276)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:231)
	at org.apache.tomcat.util.net.AbstractEndpoint.bindWithCleanup(AbstractEndpoint.java:1302)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1388)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:663)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1037)
	... 20 common frames omitted
24-10-28.19:10:50.718 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 107200 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:10:50.722 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:10:52.080 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:10:52.084 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:10:52.126 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
24-10-28.19:10:52.955 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:10:52.968 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:10:52.969 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:10:52.969 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:10:53.108 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:10:53.108 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2323 ms
24-10-28.19:10:54.101 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:10:54.383 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:10:54.401 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:10:55.677 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:10:55.741 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:10:55.757 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:10:55.793 [main            ] INFO  Application            - Started Application in 5.803 seconds (JVM running for 6.908)
24-10-28.19:10:55.975 [RMI TCP Connection(1)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:10:55.975 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:10:55.977 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:10:55.978 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-10-28.19:10:56.173 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:11:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:11:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:12:57.924 [http-nio-8092-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-28.19:12:58.507 [http-nio-8092-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"éšæœºç§¯åˆ†","sort":1},{"awardId":102,"awardTitle":"7ç­‰å¥–","sort":2},{"awardId":103,"awardTitle":"6ç­‰å¥–","sort":3},{"awardId":104,"awardTitle":"5ç­‰å¥–","sort":4},{"awardId":105,"awardTitle":"4ç­‰å¥–","sort":5},{"awardId":106,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"3ç­‰å¥–","sort":6},{"awardId":107,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"2ç­‰å¥–","sort":7},{"awardId":108,"awardSubtitle":"æŠ½å¥–2æ¬¡åŽè§£é”","awardTitle":"1ç­‰å¥–","sort":8}],"info":"成功"}
24-10-28.19:13:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:04.473 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:13:04.498 [http-nio-8092-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 108
24-10-28.19:13:04.499 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 108 rule_default
24-10-28.19:13:04.601 [http-nio-8092-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:108
24-10-28.19:13:04.602 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【è§„åˆ™æ ‘】treeId:tree_lock_2 node:rule_lock code:0000
24-10-28.19:13:04.603 [http-nio-8092-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:108
24-10-28.19:13:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:05.937 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【è§„åˆ™æ ‘】treeId:tree_lock_2 node:rule_stock code:0001
24-10-28.19:13:05.937 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 108 null
24-10-28.19:13:05.953 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":108,"awardIndex":8},"info":"成功"}
24-10-28.19:13:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:22.310 [http-nio-8092-exec-5] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:13:22.318 [http-nio-8092-exec-5] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 106
24-10-28.19:13:22.319 [http-nio-8092-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 106 rule_default
24-10-28.19:13:22.330 [http-nio-8092-exec-5] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:106
24-10-28.19:13:22.330 [http-nio-8092-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【è§„åˆ™æ ‘】treeId:tree_lock_1 node:rule_lock code:0000
24-10-28.19:13:22.330 [http-nio-8092-exec-5] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:106
24-10-28.19:13:22.333 [http-nio-8092-exec-5] INFO  DecisionTreeEngine     - 决策树引擎【è§„åˆ™æ ‘】treeId:tree_lock_1 node:rule_stock code:0001
24-10-28.19:13:22.333 [http-nio-8092-exec-5] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 106 null
24-10-28.19:13:22.338 [http-nio-8092-exec-5] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":106,"awardIndex":6},"info":"成功"}
24-10-28.19:13:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:13:34.307 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:13:34.315 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-28.19:15:18.812 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 109699 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:15:18.816 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:15:20.160 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:15:20.164 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:15:20.210 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
24-10-28.19:15:21.057 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:15:21.069 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:15:21.070 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:15:21.070 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:15:21.211 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:15:21.212 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2332 ms
24-10-28.19:15:22.212 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:15:22.486 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:15:22.508 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:15:23.795 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:15:23.839 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:15:23.856 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:15:23.885 [main            ] INFO  Application            - Started Application in 5.808 seconds (JVM running for 6.741)
24-10-28.19:15:23.967 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:15:23.968 [RMI TCP Connection(1)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:15:23.968 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:15:23.970 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-10-28.19:15:24.110 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:15:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:31.628 [http-nio-8092-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-28.19:15:32.005 [http-nio-8092-exec-1] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"éšæœºç§¯åˆ†","sort":1},{"awardId":102,"awardTitle":"7ç­‰å¥–","sort":2},{"awardId":103,"awardTitle":"6ç­‰å¥–","sort":3},{"awardId":104,"awardTitle":"5ç­‰å¥–","sort":4},{"awardId":105,"awardTitle":"4ç­‰å¥–","sort":5},{"awardId":106,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"3ç­‰å¥–","sort":6},{"awardId":107,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"2ç­‰å¥–","sort":7},{"awardId":108,"awardSubtitle":"æŠ½å¥–2æ¬¡åŽè§£é”","awardTitle":"1ç­‰å¥–","sort":8}],"info":"成功"}
24-10-28.19:15:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:35.599 [http-nio-8092-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-28.19:15:35.606 [http-nio-8092-exec-2] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"éšæœºç§¯åˆ†","sort":1},{"awardId":102,"awardTitle":"7ç­‰å¥–","sort":2},{"awardId":103,"awardTitle":"6ç­‰å¥–","sort":3},{"awardId":104,"awardTitle":"5ç­‰å¥–","sort":4},{"awardId":105,"awardTitle":"4ç­‰å¥–","sort":5},{"awardId":106,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"3ç­‰å¥–","sort":6},{"awardId":107,"awardSubtitle":"æŠ½å¥–1æ¬¡åŽè§£é”","awardTitle":"2ç­‰å¥–","sort":7},{"awardId":108,"awardSubtitle":"æŠ½å¥–2æ¬¡åŽè§£é”","awardTitle":"1ç­‰å¥–","sort":8}],"info":"成功"}
24-10-28.19:15:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:52.007 [http-nio-8092-exec-4] INFO  RaffleController       - 抽奖策略装配开始 strategyId: 100006
24-10-28.19:15:52.152 [http-nio-8092-exec-4] INFO  RaffleController       - 抽奖策略装配完成 strategyId: 100006 response: {"code":"0000","data":true,"info":"成功"}
24-10-28.19:15:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:15:57.470 [http-nio-8092-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配开始 strategyId：100006
24-10-28.19:15:57.474 [http-nio-8092-exec-5] INFO  RaffleController       - 查询抽奖奖品列表配置完成 strategyId：100006 response: {"code":"0000","data":[{"awardId":101,"awardTitle":"随机积分","sort":1},{"awardId":102,"awardTitle":"7等奖","sort":2},{"awardId":103,"awardTitle":"6等奖","sort":3},{"awardId":104,"awardTitle":"5等奖","sort":4},{"awardId":105,"awardTitle":"4等奖","sort":5},{"awardId":106,"awardSubtitle":"抽奖1次后解锁","awardTitle":"3等奖","sort":6},{"awardId":107,"awardSubtitle":"抽奖1次后解锁","awardTitle":"2等奖","sort":7},{"awardId":108,"awardSubtitle":"抽奖2次后解锁","awardTitle":"1等奖","sort":8}],"info":"成功"}
24-10-28.19:16:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:01.168 [http-nio-8092-exec-6] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:16:01.177 [http-nio-8092-exec-6] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 101
24-10-28.19:16:01.177 [http-nio-8092-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 101 rule_default
24-10-28.19:16:01.214 [http-nio-8092-exec-6] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:101
24-10-28.19:16:01.254 [http-nio-8092-exec-6] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-10-28.19:16:01.255 [http-nio-8092-exec-6] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 101 null
24-10-28.19:16:01.268 [http-nio-8092-exec-6] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":101,"awardIndex":1},"info":"成功"}
24-10-28.19:16:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:09.097 [http-nio-8092-exec-7] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:16:09.104 [http-nio-8092-exec-7] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: null
24-10-28.19:16:09.104 [http-nio-8092-exec-7] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 null rule_default
24-10-28.19:16:09.126 [http-nio-8092-exec-7] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:214)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d581abbc.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-28.19:16:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:25.099 [http-nio-8092-exec-8] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:16:25.103 [http-nio-8092-exec-8] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 104
24-10-28.19:16:25.104 [http-nio-8092-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 104 rule_default
24-10-28.19:16:25.124 [http-nio-8092-exec-8] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:104
24-10-28.19:16:25.129 [http-nio-8092-exec-8] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-10-28.19:16:25.130 [http-nio-8092-exec-8] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 104 null
24-10-28.19:16:25.133 [http-nio-8092-exec-8] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":104,"awardIndex":4},"info":"成功"}
24-10-28.19:16:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:32.065 [http-nio-8092-exec-9] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:16:32.069 [http-nio-8092-exec-9] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: null
24-10-28.19:16:32.070 [http-nio-8092-exec-9] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 null rule_default
24-10-28.19:16:32.076 [http-nio-8092-exec-9] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:214)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$d581abbc.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-28.19:16:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:16:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:30.101 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:17:30.123 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-28.19:17:34.675 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 110945 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:17:34.677 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:17:36.198 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:17:36.200 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:17:36.242 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 21 ms. Found 0 Redis repository interfaces.
24-10-28.19:17:37.220 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:17:37.234 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:17:37.234 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:17:37.235 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:17:37.377 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:17:37.377 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2650 ms
24-10-28.19:17:38.532 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:17:38.866 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:17:38.889 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:17:40.157 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:17:40.198 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:17:40.212 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:17:40.235 [main            ] INFO  Application            - Started Application in 6.282 seconds (JVM running for 8.104)
24-10-28.19:17:40.580 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:17:40.580 [RMI TCP Connection(4)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:17:40.580 [RMI TCP Connection(4)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:17:40.582 [RMI TCP Connection(4)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-10-28.19:17:40.718 [RMI TCP Connection(3)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:17:45.218 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:45.337 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:17:53.174 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:17:53.223 [http-nio-8092-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 108
24-10-28.19:17:55.605 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 108 rule_default
24-10-28.19:17:55.605 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:18:20.543 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:18:45.677 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:18:53.016 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:18:53.022 [http-nio-8092-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:108
24-10-28.19:18:53.023 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_lock code:0000
24-10-28.19:18:53.024 [http-nio-8092-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:108
24-10-28.19:18:53.062 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_stock code:0001
24-10-28.19:18:53.063 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 108 null
24-10-28.19:18:53.285 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":108,"awardIndex":8},"info":"成功"}
24-10-28.19:18:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:19:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:19:00.748 [http-nio-8092-exec-2] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:19:04.001 [http-nio-8092-exec-2] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: null
24-10-28.19:19:08.159 [http-nio-8092-exec-2] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 null rule_default
24-10-28.19:19:08.159 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:24.166 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:24.167 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=3m31s150ms465µs393ns).
24-10-28.19:22:33.138 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:33.148 [http-nio-8092-exec-2] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:214)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$ab154eec.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-28.19:22:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:22:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:15.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:23:47.077 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:23:47.100 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-28.19:25:48.946 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 114838 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:25:48.948 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:25:50.509 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:25:50.513 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:25:50.568 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
24-10-28.19:25:51.522 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:25:51.537 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:25:51.538 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:25:51.539 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:25:51.678 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:25:51.679 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2662 ms
24-10-28.19:25:52.729 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:25:53.044 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:25:53.061 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:25:54.583 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:25:54.646 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:25:54.668 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:25:54.704 [main            ] INFO  Application            - Started Application in 6.543 seconds (JVM running for 7.611)
24-10-28.19:25:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:25:55.132 [RMI TCP Connection(2)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:25:55.132 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:25:55.133 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:25:55.135 [RMI TCP Connection(2)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 3 ms
24-10-28.19:25:55.383 [RMI TCP Connection(1)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:26:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:03.546 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:26:03.596 [http-nio-8092-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 108
24-10-28.19:26:03.596 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 108 rule_default
24-10-28.19:26:03.720 [http-nio-8092-exec-1] INFO  RuleLockLogicTreeNode  - 规则过滤-次数锁 userId:system strategyId:100006 awardId:108
24-10-28.19:26:03.722 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_lock code:0000
24-10-28.19:26:03.723 [http-nio-8092-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:108
24-10-28.19:26:03.790 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树】treeId:tree_lock_2 node:rule_stock code:0001
24-10-28.19:26:03.791 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 108 null
24-10-28.19:26:04.039 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":108,"awardIndex":8},"info":"成功"}
24-10-28.19:26:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:23.024 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:26:23.040 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-28.19:26:26.880 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 115315 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:26:26.881 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:26:28.275 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:26:28.277 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:26:28.324 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
24-10-28.19:26:29.280 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:26:29.309 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:26:29.310 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:26:29.310 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:26:29.449 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:26:29.450 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2448 ms
24-10-28.19:26:30.594 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:26:30.873 [redisson-netty-2-5] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:26:30.894 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:26:32.066 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:26:32.108 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:26:32.131 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:26:32.166 [main            ] INFO  Application            - Started Application in 5.997 seconds (JVM running for 6.934)
24-10-28.19:26:32.685 [RMI TCP Connection(1)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:26:32.686 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:26:32.686 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:26:32.688 [RMI TCP Connection(1)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-10-28.19:26:32.836 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:26:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:26:44.613 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:26:44.668 [http-nio-8092-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: null
24-10-28.19:26:44.670 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 null rule_default
24-10-28.19:27:45.199 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:27:45.200 [HikariPool-1 housekeeper] WARN  HikariPool             - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m12s263ms385µs842ns).
24-10-28.19:27:45.224 [http-nio-8092-exec-1] ERROR RaffleController       - 随机抽奖失败 strategyId：100006
java.lang.NullPointerException: null
	at site.mufen.infrastructure.persistent.repository.StrategyRepository.queryRuleTreeVOByTreeId(StrategyRepository.java:214)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$FastClassBySpringCGLIB$$4915b6c7.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:793)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:763)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:708)
	at site.mufen.infrastructure.persistent.repository.StrategyRepository$$EnhancerBySpringCGLIB$$ab154eec.queryRuleTreeVOByTreeId(<generated>)
	at site.mufen.domain.strategy.service.raffle.DefaultRaffleStrategy.raffleLogicTree(DefaultRaffleStrategy.java:62)
	at site.mufen.domain.strategy.service.AbstractRaffleStrategy.performRaffle(AbstractRaffleStrategy.java:63)
	at site.mufen.trigger.http.RaffleController.randomRaffle(RaffleController.java:128)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:96)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:926)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1791)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
24-10-28.19:27:45.339 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:27:45.361 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
24-10-28.19:27:48.376 [main            ] INFO  Application            - Starting Application using Java 1.8.0_432 on myarch with PID 116165 (/home/mufen/Downloads/big-market/big-market-app/target/classes started by mufen in /home/mufen/Downloads/big-market)
24-10-28.19:27:48.378 [main            ] INFO  Application            - The following 1 profile is active: "dev"
24-10-28.19:27:49.776 [main            ] INFO  RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
24-10-28.19:27:49.781 [main            ] INFO  RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
24-10-28.19:27:49.831 [main            ] INFO  RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
24-10-28.19:27:50.862 [main            ] INFO  TomcatWebServer        - Tomcat initialized with port(s): 8092 (http)
24-10-28.19:27:50.878 [main            ] INFO  Http11NioProtocol      - Initializing ProtocolHandler ["http-nio-8092"]
24-10-28.19:27:50.879 [main            ] INFO  StandardService        - Starting service [Tomcat]
24-10-28.19:27:50.879 [main            ] INFO  StandardEngine         - Starting Servlet engine: [Apache Tomcat/9.0.75]
24-10-28.19:27:51.030 [main            ] INFO  [/]                    - Initializing Spring embedded WebApplicationContext
24-10-28.19:27:51.030 [main            ] INFO  ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2540 ms
24-10-28.19:27:52.272 [main            ] INFO  Version                - Redisson 3.23.4
24-10-28.19:27:52.611 [redisson-netty-2-4] INFO  MasterPubSubConnectionPool - 1 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:27:52.628 [redisson-netty-2-13] INFO  MasterConnectionPool   - 5 connections initialized for 127.0.0.1/127.0.0.1:16379
24-10-28.19:27:53.890 [main            ] INFO  EndpointLinksResolver  - Exposing 1 endpoint(s) beneath base path '/actuator'
24-10-28.19:27:53.932 [main            ] INFO  Http11NioProtocol      - Starting ProtocolHandler ["http-nio-8092"]
24-10-28.19:27:53.944 [main            ] INFO  TomcatWebServer        - Tomcat started on port(s): 8092 (http) with context path ''
24-10-28.19:27:53.967 [main            ] INFO  Application            - Started Application in 6.254 seconds (JVM running for 7.331)
24-10-28.19:27:54.122 [RMI TCP Connection(3)-127.0.0.1] INFO  [/]                    - Initializing Spring DispatcherServlet 'dispatcherServlet'
24-10-28.19:27:54.122 [RMI TCP Connection(3)-127.0.0.1] INFO  DispatcherServlet      - Initializing Servlet 'dispatcherServlet'
24-10-28.19:27:54.123 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Starting...
24-10-28.19:27:54.124 [RMI TCP Connection(3)-127.0.0.1] INFO  DispatcherServlet      - Completed initialization in 2 ms
24-10-28.19:27:54.269 [RMI TCP Connection(2)-127.0.0.1] INFO  HikariDataSource       - HikariPool-1 - Start completed.
24-10-28.19:27:55.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:27:57.563 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖开始 strategyId: 100006
24-10-28.19:27:57.618 [http-nio-8092-exec-1] INFO  DefaultLogicChain      - 抽奖责任链-默认处理 userId: system strategyId: 100006 ruleModel: rule_default awardId: 103
24-10-28.19:27:57.619 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-责任链 system 100006 103 rule_default
24-10-28.19:28:14.864 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:16.142 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:16.166 [http-nio-8092-exec-1] INFO  RuleStockLogicTreeNode - 规则过滤-库存扣减 userId:system strategyId:100006 awardId:103
24-10-28.19:28:16.209 [http-nio-8092-exec-1] INFO  DecisionTreeEngine     - 决策树引擎【规则树-兜底奖励】treeId:tree_luck_award node:rule_stock code:0001
24-10-28.19:28:16.210 [http-nio-8092-exec-1] INFO  AbstractRaffleStrategy - 抽奖策略计算-规则树 system 100006 103 null
24-10-28.19:28:16.419 [http-nio-8092-exec-1] INFO  RaffleController       - 随机抽奖完成 strategyId: 100006 response: {"code":"0000","data":{"awardId":103,"awardIndex":3},"info":"成功"}
24-10-28.19:28:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:30.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:40.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:45.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:28:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:20.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:35.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:50.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:29:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:00.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:05.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:10.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:25.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:30.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:35.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:40.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:45.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:50.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:30:55.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:00.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:05.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:10.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:15.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:20.000 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:25.001 [scheduling-1    ] INFO  UpdateAwardStockJob    - 定时任务，更新奖品库存 【延迟队列获取， 降低对数据库的更新频次，不要产生竞争】
24-10-28.19:31:29.514 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown initiated...
24-10-28.19:31:29.543 [SpringApplicationShutdownHook] INFO  HikariDataSource       - HikariPool-1 - Shutdown completed.
